version: 2.1

# Define Slack
orbs: 
  slack: circleci/slack@4.9.3

commands:
  slack_notify:
    steps:
      - run:
          name: Slack notify
          when: on_fail
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1

jobs:
  # build front end
  build-frontend:
    docker:
      - image: circleci/node:16.3.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
            return 1
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build
      - slack_notify

  # build back end
  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  # Test frontend
  test-frontend:
    docker:
      - image: circleci/node:16.3.0
    steps:
      - checkout
      - restore_cache:
          keys: [test-frontend]
      - run:
          name: Test front end
          command: |
            cd frontend
            npm install
            npm run test
      - save_cache:
          paths: [frontend/node_modules]
          key: test-frontend
  
  # Test backend
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [test-backend]
      - run:
          name: Test back end
          command: |
            cd backend
            npm install
            npm run test
      - save_cache:
          paths: [backend/node_modules]
          key: test-backend
  
  # Analyze front end
  scan-frontend:
    docker:
      - image: circleci/node:16.3.0
    steps:
      - checkout
      - restore_cache:
          keys: [scan-frontend]
      - run:
          name: Scan front end
          command: |
            cd frontend
            npm install
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
      - save_cache:
          paths: [backend/node_modules]
          key: scan-frontend
  # Analyze back end
  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [scan-backend]
      - run:
          name: Scan backend
          command: |
            cd backend
            npm install
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
      - save_cache:
          paths: [backend/node_modules]
          key: scan-backend
workflows:
  default:
    jobs:
      - build-frontend:
          context: slack-secrets
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]
      - scan-backend:
          requires: [build-backend]